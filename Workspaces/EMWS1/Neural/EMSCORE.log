MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 05, 
2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:12:01" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 05, 2015
Time:                14:12:01
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0BPILFS 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EMSCORE.out" 
encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0BPILFS new;
MPRINT(EM_DIAGRAM):   run;
151504     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
151505     set EMWS1.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_OUTKEY;
151506     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
151507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 28 observations read from the data set EMWS1.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

151508     filename emflow
151508   ! "C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EM
151508   ! FLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EMFLOWSCORE.s
as";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151509     *------------------------------------------------------------*;
151510     * Neural: Scoring DATA data;
151511     *------------------------------------------------------------*;
151512     data EMWS1.Neural_TRAIN
151513     / view=EMWS1.Neural_TRAIN
151514     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_TRAIN / view=EMWS1.Neural_TRAIN ;
151515     set EMWS1.BINNING_TRAIN
151516     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
151517     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EMFLOWSC
      ORE.sas.
151518    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151519    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
151520    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151521    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
151522    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
151523    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
151524    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
151525    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
151526    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
151527    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
151528    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
151529    +LENGTH _WARN_ $4
151530    +      F_bad  $ 12
151531    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_bad $ 12 ;
151532    +      label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
151533    +
151534    +      label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
151535    +
151536    +      label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
151537    +
151538    +      label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
151539    +
151540    +      label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
151541    +
151542    +      label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
151543    +
151544    +      label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
151545    +
151546    +      label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
151547    +
151548    +      label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
151549    +
151550    +      label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
151551    +
151552    +      label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
151553    +
151554    +      label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
151555    +
151556    +      label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
151557    +
151558    +      label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
151559    +
151560    +      label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
151561    +
151562    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
151563    +
151564    +      label I_bad = 'Into: bad' ;
MPRINT(EM_DIAGRAM):   label I_bad = 'Into: bad' ;
151565    +
151566    +      label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
151567    +
151568    +      label U_bad = 'Unnormalized Into: bad' ;
MPRINT(EM_DIAGRAM):   label U_bad = 'Unnormalized Into: bad' ;
151569    +
151570    +      label P_bad1 = 'Predicted: bad=1' ;
MPRINT(EM_DIAGRAM):   label P_bad1 = 'Predicted: bad=1' ;
151571    +
151572    +      label R_bad1 = 'Residual: bad=1' ;
MPRINT(EM_DIAGRAM):   label R_bad1 = 'Residual: bad=1' ;
151573    +
151574    +      label P_bad0 = 'Predicted: bad=0' ;
MPRINT(EM_DIAGRAM):   label P_bad0 = 'Predicted: bad=0' ;
151575    +
151576    +      label R_bad0 = 'Residual: bad=0' ;
MPRINT(EM_DIAGRAM):   label R_bad0 = 'Residual: bad=0' ;
151577    +
151578    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
151579    +
151580    +*** Generate dummy variables for GRP_LOG_REP_clage ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_clage ;
151581    +drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3
151582    +        GRP_LOG_REP_clage4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3 
GRP_LOG_REP_clage4 ;
151583    +if missing( GRP_LOG_REP_clage ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_clage ) then do;
151584    +   GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
151585    +   GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
151586    +   GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
151587    +   GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
151588    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151589    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151590    +end;
MPRINT(EM_DIAGRAM):   end;
151591    +else do;
MPRINT(EM_DIAGRAM):   else do;
151592    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151593    +   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
151594    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151595    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
151596    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
151597    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
151598    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
151599    +            GRP_LOG_REP_clage1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = -0.55901699437494;
151600    +            GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
151601    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
151602    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
151603    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151604    +         end;
MPRINT(EM_DIAGRAM):   end;
151605    +         else do;
MPRINT(EM_DIAGRAM):   else do;
151606    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
151607    +               GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
151608    +               GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
151609    +               GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
151610    +               GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
151611    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151612    +            end;
MPRINT(EM_DIAGRAM):   end;
151613    +         end;
MPRINT(EM_DIAGRAM):   end;
151614    +      end;
MPRINT(EM_DIAGRAM):   end;
151615    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151616    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
151617    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
151618    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
151619    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
151620    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
151621    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151622    +         end;
MPRINT(EM_DIAGRAM):   end;
151623    +      end;
MPRINT(EM_DIAGRAM):   end;
151624    +   end;
MPRINT(EM_DIAGRAM):   end;
151625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151626    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
151627    +         GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
151628    +         GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
151629    +         GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
151630    +         GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
151631    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151632    +      end;
MPRINT(EM_DIAGRAM):   end;
151633    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151634    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
151635    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
151636    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
151637    +            GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
151638    +            GRP_LOG_REP_clage4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = 0.55901699437494;
151639    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151640    +         end;
MPRINT(EM_DIAGRAM):   end;
151641    +      end;
MPRINT(EM_DIAGRAM):   end;
151642    +   end;
MPRINT(EM_DIAGRAM):   end;
151643    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
151644    +      GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
151645    +      GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
151646    +      GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
151647    +      GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
151648    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151649    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151650    +   end;
MPRINT(EM_DIAGRAM):   end;
151651    +end;
MPRINT(EM_DIAGRAM):   end;
151652    +
151653    +*** Generate dummy variables for GRP_LOG_REP_debtinc ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_debtinc ;
151654    +drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3
151655    +        GRP_LOG_REP_debtinc4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3 
GRP_LOG_REP_debtinc4 ;
151656    +if missing( GRP_LOG_REP_debtinc ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_debtinc ) then do;
151657    +   GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
151658    +   GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
151659    +   GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
151660    +   GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
151661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151663    +end;
MPRINT(EM_DIAGRAM):   end;
151664    +else do;
MPRINT(EM_DIAGRAM):   else do;
151665    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151666    +   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
151667    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151668    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
151669    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
151670    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
151671    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
151672    +            GRP_LOG_REP_debtinc1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = -0.55901699437494;
151673    +            GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
151674    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
151675    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
151676    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151677    +         end;
MPRINT(EM_DIAGRAM):   end;
151678    +         else do;
MPRINT(EM_DIAGRAM):   else do;
151679    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
151680    +               GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
151681    +               GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
151682    +               GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
151683    +               GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
151684    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151685    +            end;
MPRINT(EM_DIAGRAM):   end;
151686    +         end;
MPRINT(EM_DIAGRAM):   end;
151687    +      end;
MPRINT(EM_DIAGRAM):   end;
151688    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151689    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
151690    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
151691    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
151692    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
151693    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
151694    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151695    +         end;
MPRINT(EM_DIAGRAM):   end;
151696    +      end;
MPRINT(EM_DIAGRAM):   end;
151697    +   end;
MPRINT(EM_DIAGRAM):   end;
151698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151699    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
151700    +         GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
151701    +         GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
151702    +         GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
151703    +         GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
151704    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151705    +      end;
MPRINT(EM_DIAGRAM):   end;
151706    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151707    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
151708    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
151709    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
151710    +            GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
151711    +            GRP_LOG_REP_debtinc4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = 0.55901699437494;
151712    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151713    +         end;
MPRINT(EM_DIAGRAM):   end;
151714    +      end;
MPRINT(EM_DIAGRAM):   end;
151715    +   end;
MPRINT(EM_DIAGRAM):   end;
151716    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
151717    +      GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
151718    +      GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
151719    +      GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
151720    +      GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
151721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151723    +   end;
MPRINT(EM_DIAGRAM):   end;
151724    +end;
MPRINT(EM_DIAGRAM):   end;
151725    +
151726    +*** Generate dummy variables for GRP_LOG_REP_ninq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_ninq ;
151727    +drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
151728    +if missing( GRP_LOG_REP_ninq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_ninq ) then do;
151729    +   GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
151730    +   GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
151731    +   GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
151732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151734    +end;
MPRINT(EM_DIAGRAM):   end;
151735    +else do;
MPRINT(EM_DIAGRAM):   else do;
151736    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151737    +   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
151738    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151739    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
151740    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
151741    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
151742    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
151743    +   end;
MPRINT(EM_DIAGRAM):   end;
151744    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
151745    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
151746    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
151747    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
151748    +   end;
MPRINT(EM_DIAGRAM):   end;
151749    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
151750    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
151751    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
151752    +      GRP_LOG_REP_ninq4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = 0.63245553203367;
151753    +   end;
MPRINT(EM_DIAGRAM):   end;
151754    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
151755    +      GRP_LOG_REP_ninq1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = -0.63245553203367;
151756    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
151757    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
151758    +   end;
MPRINT(EM_DIAGRAM):   end;
151759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151760    +      GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
151761    +      GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
151762    +      GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
151763    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151764    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151765    +   end;
MPRINT(EM_DIAGRAM):   end;
151766    +end;
MPRINT(EM_DIAGRAM):   end;
151767    +
151768    +*** Generate dummy variables for GRP_LOG_REP_value ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_value ;
151769    +drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3
151770    +        GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3 
GRP_LOG_REP_value4 ;
151771    +if missing( GRP_LOG_REP_value ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_value ) then do;
151772    +   GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
151773    +   GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
151774    +   GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
151775    +   GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
151776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
151777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151778    +end;
MPRINT(EM_DIAGRAM):   end;
151779    +else do;
MPRINT(EM_DIAGRAM):   else do;
151780    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
151781    +   _dm12 = put( GRP_LOG_REP_value , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_value , BEST12. );
151782    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151783    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
151784    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
151785    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
151786    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
151787    +            GRP_LOG_REP_value1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = -0.55901699437494;
151788    +            GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
151789    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
151790    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
151791    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151792    +         end;
MPRINT(EM_DIAGRAM):   end;
151793    +         else do;
MPRINT(EM_DIAGRAM):   else do;
151794    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
151795    +               GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
151796    +               GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
151797    +               GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
151798    +               GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
151799    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151800    +            end;
MPRINT(EM_DIAGRAM):   end;
151801    +         end;
MPRINT(EM_DIAGRAM):   end;
151802    +      end;
MPRINT(EM_DIAGRAM):   end;
151803    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151804    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
151805    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
151806    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
151807    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
151808    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
151809    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151810    +         end;
MPRINT(EM_DIAGRAM):   end;
151811    +      end;
MPRINT(EM_DIAGRAM):   end;
151812    +   end;
MPRINT(EM_DIAGRAM):   end;
151813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151814    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
151815    +         GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
151816    +         GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
151817    +         GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
151818    +         GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
151819    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151820    +      end;
MPRINT(EM_DIAGRAM):   end;
151821    +      else do;
MPRINT(EM_DIAGRAM):   else do;
151822    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
151823    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
151824    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
151825    +            GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
151826    +            GRP_LOG_REP_value4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = 0.55901699437494;
151827    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
151828    +         end;
MPRINT(EM_DIAGRAM):   end;
151829    +      end;
MPRINT(EM_DIAGRAM):   end;
151830    +   end;
MPRINT(EM_DIAGRAM):   end;
151831    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
151832    +      GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
151833    +      GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
151834    +      GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
151835    +      GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
151836    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
151837    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
151838    +   end;
MPRINT(EM_DIAGRAM):   end;
151839    +end;
MPRINT(EM_DIAGRAM):   end;
151840    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151841    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
151842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151844    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
151845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151846    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151847    +   H11  =  1.0000000133514E-10 * GRP_LOG_REP_clage1  +     0.04364206165471 *
151848    +        GRP_LOG_REP_clage2  +     0.13624993297965 * GRP_LOG_REP_clage3
151849    +          +     0.08615363436846 * GRP_LOG_REP_clage4
151850    +          +     0.57877992451216 * GRP_LOG_REP_debtinc1
151851    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc2
151852    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc3
151853    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc4
151854    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq1
151855    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq3
151856    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq4
151857    +          +     1.25935285271008 * GRP_LOG_REP_value1
151858    +          +     0.01968411654557 * GRP_LOG_REP_value2
151859    +          +     0.02907157918835 * GRP_LOG_REP_value3
151860    +          +  1.0000000827403E-10 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000133514E-10 * GRP_LOG_REP_clage1 + 0.04364206165471 * 
GRP_LOG_REP_clage2 + 0.13624993297965 * GRP_LOG_REP_clage3 + 0.08615363436846 * 
GRP_LOG_REP_clage4 + 0.57877992451216 * GRP_LOG_REP_debtinc1 + 1.0000000827403E-10 * 
GRP_LOG_REP_debtinc2 + 1.0000000827403E-10 * GRP_LOG_REP_debtinc3 + 1.0000000827403E-10 * 
GRP_LOG_REP_debtinc4 + 1.0000000827403E-10 * GRP_LOG_REP_ninq1 + 1.0000000827403E-10 * 
GRP_LOG_REP_ninq3 + 1.0000000827403E-10 * GRP_LOG_REP_ninq4 + 1.25935285271008 * 
GRP_LOG_REP_value1 + 0.01968411654557 * GRP_LOG_REP_value2 + 0.02907157918835 * 
GRP_LOG_REP_value3 + 1.0000000827403E-10 * GRP_LOG_REP_value4 ;
151861    +   H11  =    -0.60166259756818 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.60166259756818 + H11 ;
151862    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
151863    +END;
MPRINT(EM_DIAGRAM):   END;
151864    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151865    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
151866    +END;
MPRINT(EM_DIAGRAM):   END;
151867    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151868    +*** Writing the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bad ;
151869    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151870    +
151871    +*** Generate dummy variables for bad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for bad ;
151872    +drop bad1 bad0 ;
MPRINT(EM_DIAGRAM):   drop bad1 bad0 ;
151873    +label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
151874    +length F_bad $ 12;
MPRINT(EM_DIAGRAM):   length F_bad $ 12;
151875    +F_bad = put( bad , BEST12. );
MPRINT(EM_DIAGRAM):   F_bad = put( bad , BEST12. );
151876    +%DMNORMIP( F_bad )
MPRINT(DMNORMIP):   call dmnorm(F_bad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
151877    +if missing( bad ) then do;
MPRINT(EM_DIAGRAM):   if missing( bad ) then do;
151878    +   bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
151879    +   bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
151880    +end;
MPRINT(EM_DIAGRAM):   end;
151881    +else do;
MPRINT(EM_DIAGRAM):   else do;
151882    +   if F_bad = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_bad = '0' then do;
151883    +      bad1 = 0;
MPRINT(EM_DIAGRAM):   bad1 = 0;
151884    +      bad0 = 1;
MPRINT(EM_DIAGRAM):   bad0 = 1;
151885    +   end;
MPRINT(EM_DIAGRAM):   end;
151886    +   else if F_bad = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_bad = '1' then do;
151887    +      bad1 = 1;
MPRINT(EM_DIAGRAM):   bad1 = 1;
151888    +      bad0 = 0;
MPRINT(EM_DIAGRAM):   bad0 = 0;
151889    +   end;
MPRINT(EM_DIAGRAM):   end;
151890    +   else do;
MPRINT(EM_DIAGRAM):   else do;
151891    +      bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
151892    +      bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
151893    +   end;
MPRINT(EM_DIAGRAM):   end;
151894    +end;
MPRINT(EM_DIAGRAM):   end;
151895    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
151896    +   P_bad1  =    -4.49889696786094 * H11 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -4.49889696786094 * H11 ;
151897    +   P_bad1  =    -0.71524296738383 + P_bad1 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -0.71524296738383 + P_bad1 ;
151898    +   P_bad0  = 0;
MPRINT(EM_DIAGRAM):   P_bad0 = 0;
151899    +   _MAX_ = MAX (P_bad1 , P_bad0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_bad1 , P_bad0 );
151900    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
151901    +   P_bad1  = EXP(P_bad1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad1 = EXP(P_bad1 - _MAX_);
151902    +   _SUM_ = _SUM_ + P_bad1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad1 ;
151903    +   P_bad0  = EXP(P_bad0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad0 = EXP(P_bad0 - _MAX_);
151904    +   _SUM_ = _SUM_ + P_bad0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad0 ;
151905    +   P_bad1  = P_bad1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad1 = P_bad1 / _SUM_;
151906    +   P_bad0  = P_bad0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad0 = P_bad0 / _SUM_;
151907    +END;
MPRINT(EM_DIAGRAM):   END;
151908    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
151909    +   P_bad1  = .;
MPRINT(EM_DIAGRAM):   P_bad1 = .;
151910    +   P_bad0  = .;
MPRINT(EM_DIAGRAM):   P_bad0 = .;
151911    +END;
MPRINT(EM_DIAGRAM):   END;
151912    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
151913    +   P_bad1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   P_bad1 = 0.19939577039274;
151914    +   P_bad0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   P_bad0 = 0.80060422960725;
151915    +END;
MPRINT(EM_DIAGRAM):   END;
151916    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
151917    +*** Writing the Residuals  of the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node bad ;
151918    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
151919    +IF MISSING( bad1 ) THEN R_bad1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad1 ) THEN R_bad1 = . ;
151920    +ELSE R_bad1  = bad1  - P_bad1 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad1 = bad1 - P_bad1 ;
151921    +IF MISSING( bad0 ) THEN R_bad0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad0 ) THEN R_bad0 = . ;
151922    +ELSE R_bad0  = bad0  - P_bad0 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad0 = bad0 - P_bad0 ;
151923    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151924    +*** Writing the I_bad  AND U_bad ;
MPRINT(EM_DIAGRAM):   *** Writing the I_bad AND U_bad ;
151925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
151926    +_MAXP_ = P_bad1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad1 ;
151927    +I_bad  = "1           " ;
MPRINT(EM_DIAGRAM):   I_bad = "1           " ;
151928    +U_bad  =                    1;
MPRINT(EM_DIAGRAM):   U_bad = 1;
151929    +IF( _MAXP_ LT P_bad0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_bad0 ) THEN DO;
151930    +   _MAXP_ = P_bad0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad0 ;
151931    +   I_bad  = "0           " ;
MPRINT(EM_DIAGRAM):   I_bad = "0           " ;
151932    +   U_bad  =                    0;
MPRINT(EM_DIAGRAM):   U_bad = 0;
151933    +END;
MPRINT(EM_DIAGRAM):   END;
151934    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
151935    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
151936    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
151937    +drop
151938    +H11
151939    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
151940     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      

MPRINT(EM_DIAGRAM):   quit;
151941     quit;
151942     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
151943     filename emflow
151943   ! "C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EM
151943   ! FLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EMFLOWSCORE.s
as";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
151944     *------------------------------------------------------------*;
151945     * Neural: Scoring VALIDATE data;
151946     *------------------------------------------------------------*;
151947     data EMWS1.Neural_VALIDATE
151948     / view=EMWS1.Neural_VALIDATE
151949     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_VALIDATE / view=EMWS1.Neural_VALIDATE ;
151950     set EMWS1.BINNING_VALIDATE
151951     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
151952     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\EMFLOWSC
      ORE.sas.
151953    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151954    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
151955    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
151956    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
151957    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
151958    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
151959    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
151960    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
151961    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
151962    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
151963    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
151964    +LENGTH _WARN_ $4
151965    +      F_bad  $ 12
151966    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_bad $ 12 ;
151967    +      label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
151968    +
151969    +      label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
151970    +
151971    +      label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
151972    +
151973    +      label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
151974    +
151975    +      label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
151976    +
151977    +      label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
151978    +
151979    +      label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
151980    +
151981    +      label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
151982    +
151983    +      label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
151984    +
151985    +      label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
151986    +
151987    +      label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
151988    +
151989    +      label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
151990    +
151991    +      label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
151992    +
151993    +      label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
151994    +
151995    +      label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
151996    +
151997    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
151998    +
151999    +      label I_bad = 'Into: bad' ;
MPRINT(EM_DIAGRAM):   label I_bad = 'Into: bad' ;
152000    +
152001    +      label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
152002    +
152003    +      label U_bad = 'Unnormalized Into: bad' ;
MPRINT(EM_DIAGRAM):   label U_bad = 'Unnormalized Into: bad' ;
152004    +
152005    +      label P_bad1 = 'Predicted: bad=1' ;
MPRINT(EM_DIAGRAM):   label P_bad1 = 'Predicted: bad=1' ;
152006    +
152007    +      label R_bad1 = 'Residual: bad=1' ;
MPRINT(EM_DIAGRAM):   label R_bad1 = 'Residual: bad=1' ;
152008    +
152009    +      label P_bad0 = 'Predicted: bad=0' ;
MPRINT(EM_DIAGRAM):   label P_bad0 = 'Predicted: bad=0' ;
152010    +
152011    +      label R_bad0 = 'Residual: bad=0' ;
MPRINT(EM_DIAGRAM):   label R_bad0 = 'Residual: bad=0' ;
152012    +
152013    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
152014    +
152015    +*** Generate dummy variables for GRP_LOG_REP_clage ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_clage ;
152016    +drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3
152017    +        GRP_LOG_REP_clage4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3 
GRP_LOG_REP_clage4 ;
152018    +if missing( GRP_LOG_REP_clage ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_clage ) then do;
152019    +   GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
152020    +   GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
152021    +   GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
152022    +   GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
152023    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152024    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152025    +end;
MPRINT(EM_DIAGRAM):   end;
152026    +else do;
MPRINT(EM_DIAGRAM):   else do;
152027    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152028    +   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
152029    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152030    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
152031    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
152032    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
152033    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
152034    +            GRP_LOG_REP_clage1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = -0.55901699437494;
152035    +            GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
152036    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
152037    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
152038    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152039    +         end;
MPRINT(EM_DIAGRAM):   end;
152040    +         else do;
MPRINT(EM_DIAGRAM):   else do;
152041    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
152042    +               GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
152043    +               GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
152044    +               GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
152045    +               GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
152046    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152047    +            end;
MPRINT(EM_DIAGRAM):   end;
152048    +         end;
MPRINT(EM_DIAGRAM):   end;
152049    +      end;
MPRINT(EM_DIAGRAM):   end;
152050    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152051    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
152052    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
152053    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
152054    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
152055    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
152056    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152057    +         end;
MPRINT(EM_DIAGRAM):   end;
152058    +      end;
MPRINT(EM_DIAGRAM):   end;
152059    +   end;
MPRINT(EM_DIAGRAM):   end;
152060    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152061    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
152062    +         GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
152063    +         GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
152064    +         GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
152065    +         GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
152066    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152067    +      end;
MPRINT(EM_DIAGRAM):   end;
152068    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152069    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
152070    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
152071    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
152072    +            GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
152073    +            GRP_LOG_REP_clage4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = 0.55901699437494;
152074    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152075    +         end;
MPRINT(EM_DIAGRAM):   end;
152076    +      end;
MPRINT(EM_DIAGRAM):   end;
152077    +   end;
MPRINT(EM_DIAGRAM):   end;
152078    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
152079    +      GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
152080    +      GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
152081    +      GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
152082    +      GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
152083    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152084    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152085    +   end;
MPRINT(EM_DIAGRAM):   end;
152086    +end;
MPRINT(EM_DIAGRAM):   end;
152087    +
152088    +*** Generate dummy variables for GRP_LOG_REP_debtinc ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_debtinc ;
152089    +drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3
152090    +        GRP_LOG_REP_debtinc4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3 
GRP_LOG_REP_debtinc4 ;
152091    +if missing( GRP_LOG_REP_debtinc ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_debtinc ) then do;
152092    +   GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
152093    +   GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
152094    +   GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
152095    +   GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
152096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152098    +end;
MPRINT(EM_DIAGRAM):   end;
152099    +else do;
MPRINT(EM_DIAGRAM):   else do;
152100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152101    +   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
152102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152103    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
152104    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
152105    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
152106    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
152107    +            GRP_LOG_REP_debtinc1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = -0.55901699437494;
152108    +            GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
152109    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
152110    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
152111    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152112    +         end;
MPRINT(EM_DIAGRAM):   end;
152113    +         else do;
MPRINT(EM_DIAGRAM):   else do;
152114    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
152115    +               GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
152116    +               GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
152117    +               GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
152118    +               GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
152119    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152120    +            end;
MPRINT(EM_DIAGRAM):   end;
152121    +         end;
MPRINT(EM_DIAGRAM):   end;
152122    +      end;
MPRINT(EM_DIAGRAM):   end;
152123    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152124    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
152125    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
152126    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
152127    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
152128    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
152129    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152130    +         end;
MPRINT(EM_DIAGRAM):   end;
152131    +      end;
MPRINT(EM_DIAGRAM):   end;
152132    +   end;
MPRINT(EM_DIAGRAM):   end;
152133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152134    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
152135    +         GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
152136    +         GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
152137    +         GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
152138    +         GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
152139    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152140    +      end;
MPRINT(EM_DIAGRAM):   end;
152141    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152142    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
152143    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
152144    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
152145    +            GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
152146    +            GRP_LOG_REP_debtinc4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = 0.55901699437494;
152147    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152148    +         end;
MPRINT(EM_DIAGRAM):   end;
152149    +      end;
MPRINT(EM_DIAGRAM):   end;
152150    +   end;
MPRINT(EM_DIAGRAM):   end;
152151    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
152152    +      GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
152153    +      GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
152154    +      GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
152155    +      GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
152156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152158    +   end;
MPRINT(EM_DIAGRAM):   end;
152159    +end;
MPRINT(EM_DIAGRAM):   end;
152160    +
152161    +*** Generate dummy variables for GRP_LOG_REP_ninq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_ninq ;
152162    +drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
152163    +if missing( GRP_LOG_REP_ninq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_ninq ) then do;
152164    +   GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
152165    +   GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
152166    +   GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
152167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152169    +end;
MPRINT(EM_DIAGRAM):   end;
152170    +else do;
MPRINT(EM_DIAGRAM):   else do;
152171    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152172    +   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
152173    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152174    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
152175    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
152176    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
152177    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
152178    +   end;
MPRINT(EM_DIAGRAM):   end;
152179    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
152180    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
152181    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
152182    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
152183    +   end;
MPRINT(EM_DIAGRAM):   end;
152184    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
152185    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
152186    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
152187    +      GRP_LOG_REP_ninq4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = 0.63245553203367;
152188    +   end;
MPRINT(EM_DIAGRAM):   end;
152189    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
152190    +      GRP_LOG_REP_ninq1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = -0.63245553203367;
152191    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
152192    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
152193    +   end;
MPRINT(EM_DIAGRAM):   end;
152194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152195    +      GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
152196    +      GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
152197    +      GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
152198    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152199    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152200    +   end;
MPRINT(EM_DIAGRAM):   end;
152201    +end;
MPRINT(EM_DIAGRAM):   end;
152202    +
152203    +*** Generate dummy variables for GRP_LOG_REP_value ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_value ;
152204    +drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3
152205    +        GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3 
GRP_LOG_REP_value4 ;
152206    +if missing( GRP_LOG_REP_value ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_value ) then do;
152207    +   GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
152208    +   GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
152209    +   GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
152210    +   GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
152211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
152212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152213    +end;
MPRINT(EM_DIAGRAM):   end;
152214    +else do;
MPRINT(EM_DIAGRAM):   else do;
152215    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
152216    +   _dm12 = put( GRP_LOG_REP_value , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_value , BEST12. );
152217    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152218    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
152219    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
152220    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
152221    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
152222    +            GRP_LOG_REP_value1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = -0.55901699437494;
152223    +            GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
152224    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
152225    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
152226    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152227    +         end;
MPRINT(EM_DIAGRAM):   end;
152228    +         else do;
MPRINT(EM_DIAGRAM):   else do;
152229    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
152230    +               GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
152231    +               GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
152232    +               GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
152233    +               GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
152234    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152235    +            end;
MPRINT(EM_DIAGRAM):   end;
152236    +         end;
MPRINT(EM_DIAGRAM):   end;
152237    +      end;
MPRINT(EM_DIAGRAM):   end;
152238    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152239    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
152240    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
152241    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
152242    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
152243    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
152244    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152245    +         end;
MPRINT(EM_DIAGRAM):   end;
152246    +      end;
MPRINT(EM_DIAGRAM):   end;
152247    +   end;
MPRINT(EM_DIAGRAM):   end;
152248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152249    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
152250    +         GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
152251    +         GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
152252    +         GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
152253    +         GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
152254    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152255    +      end;
MPRINT(EM_DIAGRAM):   end;
152256    +      else do;
MPRINT(EM_DIAGRAM):   else do;
152257    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
152258    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
152259    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
152260    +            GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
152261    +            GRP_LOG_REP_value4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = 0.55901699437494;
152262    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
152263    +         end;
MPRINT(EM_DIAGRAM):   end;
152264    +      end;
MPRINT(EM_DIAGRAM):   end;
152265    +   end;
MPRINT(EM_DIAGRAM):   end;
152266    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
152267    +      GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
152268    +      GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
152269    +      GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
152270    +      GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
152271    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
152272    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
152273    +   end;
MPRINT(EM_DIAGRAM):   end;
152274    +end;
MPRINT(EM_DIAGRAM):   end;
152275    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152276    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
152277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152279    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
152280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152281    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152282    +   H11  =  1.0000000133514E-10 * GRP_LOG_REP_clage1  +     0.04364206165471 *
152283    +        GRP_LOG_REP_clage2  +     0.13624993297965 * GRP_LOG_REP_clage3
152284    +          +     0.08615363436846 * GRP_LOG_REP_clage4
152285    +          +     0.57877992451216 * GRP_LOG_REP_debtinc1
152286    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc2
152287    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc3
152288    +          +  1.0000000827403E-10 * GRP_LOG_REP_debtinc4
152289    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq1
152290    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq3
152291    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq4
152292    +          +     1.25935285271008 * GRP_LOG_REP_value1
152293    +          +     0.01968411654557 * GRP_LOG_REP_value2
152294    +          +     0.02907157918835 * GRP_LOG_REP_value3
152295    +          +  1.0000000827403E-10 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000133514E-10 * GRP_LOG_REP_clage1 + 0.04364206165471 * 
GRP_LOG_REP_clage2 + 0.13624993297965 * GRP_LOG_REP_clage3 + 0.08615363436846 * 
GRP_LOG_REP_clage4 + 0.57877992451216 * GRP_LOG_REP_debtinc1 + 1.0000000827403E-10 * 
GRP_LOG_REP_debtinc2 + 1.0000000827403E-10 * GRP_LOG_REP_debtinc3 + 1.0000000827403E-10 * 
GRP_LOG_REP_debtinc4 + 1.0000000827403E-10 * GRP_LOG_REP_ninq1 + 1.0000000827403E-10 * 
GRP_LOG_REP_ninq3 + 1.0000000827403E-10 * GRP_LOG_REP_ninq4 + 1.25935285271008 * 
GRP_LOG_REP_value1 + 0.01968411654557 * GRP_LOG_REP_value2 + 0.02907157918835 * 
GRP_LOG_REP_value3 + 1.0000000827403E-10 * GRP_LOG_REP_value4 ;
152296    +   H11  =    -0.60166259756818 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.60166259756818 + H11 ;
152297    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
152298    +END;
MPRINT(EM_DIAGRAM):   END;
152299    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152300    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
152301    +END;
MPRINT(EM_DIAGRAM):   END;
152302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152303    +*** Writing the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bad ;
152304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152305    +
152306    +*** Generate dummy variables for bad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for bad ;
152307    +drop bad1 bad0 ;
MPRINT(EM_DIAGRAM):   drop bad1 bad0 ;
152308    +label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
152309    +length F_bad $ 12;
MPRINT(EM_DIAGRAM):   length F_bad $ 12;
152310    +F_bad = put( bad , BEST12. );
MPRINT(EM_DIAGRAM):   F_bad = put( bad , BEST12. );
152311    +%DMNORMIP( F_bad )
MPRINT(DMNORMIP):   call dmnorm(F_bad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
152312    +if missing( bad ) then do;
MPRINT(EM_DIAGRAM):   if missing( bad ) then do;
152313    +   bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
152314    +   bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
152315    +end;
MPRINT(EM_DIAGRAM):   end;
152316    +else do;
MPRINT(EM_DIAGRAM):   else do;
152317    +   if F_bad = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_bad = '0' then do;
152318    +      bad1 = 0;
MPRINT(EM_DIAGRAM):   bad1 = 0;
152319    +      bad0 = 1;
MPRINT(EM_DIAGRAM):   bad0 = 1;
152320    +   end;
MPRINT(EM_DIAGRAM):   end;
152321    +   else if F_bad = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_bad = '1' then do;
152322    +      bad1 = 1;
MPRINT(EM_DIAGRAM):   bad1 = 1;
152323    +      bad0 = 0;
MPRINT(EM_DIAGRAM):   bad0 = 0;
152324    +   end;
MPRINT(EM_DIAGRAM):   end;
152325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
152326    +      bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
152327    +      bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
152328    +   end;
MPRINT(EM_DIAGRAM):   end;
152329    +end;
MPRINT(EM_DIAGRAM):   end;
152330    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
152331    +   P_bad1  =    -4.49889696786094 * H11 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -4.49889696786094 * H11 ;
152332    +   P_bad1  =    -0.71524296738383 + P_bad1 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -0.71524296738383 + P_bad1 ;
152333    +   P_bad0  = 0;
MPRINT(EM_DIAGRAM):   P_bad0 = 0;
152334    +   _MAX_ = MAX (P_bad1 , P_bad0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_bad1 , P_bad0 );
152335    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
152336    +   P_bad1  = EXP(P_bad1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad1 = EXP(P_bad1 - _MAX_);
152337    +   _SUM_ = _SUM_ + P_bad1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad1 ;
152338    +   P_bad0  = EXP(P_bad0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad0 = EXP(P_bad0 - _MAX_);
152339    +   _SUM_ = _SUM_ + P_bad0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad0 ;
152340    +   P_bad1  = P_bad1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad1 = P_bad1 / _SUM_;
152341    +   P_bad0  = P_bad0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad0 = P_bad0 / _SUM_;
152342    +END;
MPRINT(EM_DIAGRAM):   END;
152343    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
152344    +   P_bad1  = .;
MPRINT(EM_DIAGRAM):   P_bad1 = .;
152345    +   P_bad0  = .;
MPRINT(EM_DIAGRAM):   P_bad0 = .;
152346    +END;
MPRINT(EM_DIAGRAM):   END;
152347    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
152348    +   P_bad1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   P_bad1 = 0.19939577039274;
152349    +   P_bad0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   P_bad0 = 0.80060422960725;
152350    +END;
MPRINT(EM_DIAGRAM):   END;
152351    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
152352    +*** Writing the Residuals  of the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node bad ;
152353    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
152354    +IF MISSING( bad1 ) THEN R_bad1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad1 ) THEN R_bad1 = . ;
152355    +ELSE R_bad1  = bad1  - P_bad1 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad1 = bad1 - P_bad1 ;
152356    +IF MISSING( bad0 ) THEN R_bad0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad0 ) THEN R_bad0 = . ;
152357    +ELSE R_bad0  = bad0  - P_bad0 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad0 = bad0 - P_bad0 ;
152358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152359    +*** Writing the I_bad  AND U_bad ;
MPRINT(EM_DIAGRAM):   *** Writing the I_bad AND U_bad ;
152360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
152361    +_MAXP_ = P_bad1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad1 ;
152362    +I_bad  = "1           " ;
MPRINT(EM_DIAGRAM):   I_bad = "1           " ;
152363    +U_bad  =                    1;
MPRINT(EM_DIAGRAM):   U_bad = 1;
152364    +IF( _MAXP_ LT P_bad0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_bad0 ) THEN DO;
152365    +   _MAXP_ = P_bad0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad0 ;
152366    +   I_bad  = "0           " ;
MPRINT(EM_DIAGRAM):   I_bad = "0           " ;
152367    +   U_bad  =                    0;
MPRINT(EM_DIAGRAM):   U_bad = 0;
152368    +END;
MPRINT(EM_DIAGRAM):   END;
152369    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152370    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
152371    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
152372    +drop
152373    +H11
152374    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
152375     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.31 seconds
      

MPRINT(EM_DIAGRAM):   quit;
152376     quit;
152377     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
152378     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
152379     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
152380     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural\CDELTA_TRAIN.
sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural_TRAIN out=WORK.M3HNZRTD noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HNZRTD;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HNZRTD(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HNZRTD;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HNZRTD;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3R68ZVN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M15GH9NH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   set WORK.M3R68ZVN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_BAD1") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_BAD1") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("P_BAD0") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_BAD0") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("F_BAD") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("I_BAD") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("U_BAD") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("BAD") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
152715     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
152716     set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
152717     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
152718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

152719     data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural_EMINFO;
152720     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
152721     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
152722     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
152726     run;
152727     data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
152728     set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO WORK.MODELTEMP_INFO;
152729     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

152730     proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural_EMINFO NOTHREADS;
152731     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
152732     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

152733     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
152734     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
152735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

152736     proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
152737     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
152738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

152739     data EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural_EMINFO;
152740     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
152741     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
152742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

152743     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
152744     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
152745     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
152746     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS1.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: View EMWS1.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
