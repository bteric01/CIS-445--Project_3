MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 05, 
2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 05, 2015
Time:                14:11:43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0RJVM7Y 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\EMSCORE.out"
 encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0RJVM7Y new;
MPRINT(EM_DIAGRAM):   run;
135455     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
135456     set EMWS1.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_OUTKEY;
135457     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
135458     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 30 observations read from the data set EMWS1.NEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

135459     filename emflow
135459   ! "C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\E
135459   ! MFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\EMFLOWSCORE.
sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
135460     *------------------------------------------------------------*;
135461     * Neural2: Scoring DATA data;
135462     *------------------------------------------------------------*;
135463     data EMWS1.Neural2_TRAIN
135464     / view=EMWS1.Neural2_TRAIN
135465     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_TRAIN / view=EMWS1.Neural2_TRAIN ;
135466     set EMWS1.BINNING_TRAIN
135467     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
135468     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\EMFLOWS
      CORE.sas.
135469    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135470    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
135471    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135472    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
135473    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
135474    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
135475    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
135476    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
135477    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
135478    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
135479    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
135480    +LENGTH _WARN_ $4
135481    +      F_bad  $ 12
135482    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_bad $ 12 ;
135483    +      label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
135484    +
135485    +      label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
135486    +
135487    +      label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
135488    +
135489    +      label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
135490    +
135491    +      label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
135492    +
135493    +      label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
135494    +
135495    +      label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
135496    +
135497    +      label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
135498    +
135499    +      label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
135500    +
135501    +      label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
135502    +
135503    +      label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
135504    +
135505    +      label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
135506    +
135507    +      label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
135508    +
135509    +      label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
135510    +
135511    +      label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
135512    +
135513    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
135514    +
135515    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
135516    +
135517    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
135518    +
135519    +      label I_bad = 'Into: bad' ;
MPRINT(EM_DIAGRAM):   label I_bad = 'Into: bad' ;
135520    +
135521    +      label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
135522    +
135523    +      label U_bad = 'Unnormalized Into: bad' ;
MPRINT(EM_DIAGRAM):   label U_bad = 'Unnormalized Into: bad' ;
135524    +
135525    +      label P_bad1 = 'Predicted: bad=1' ;
MPRINT(EM_DIAGRAM):   label P_bad1 = 'Predicted: bad=1' ;
135526    +
135527    +      label R_bad1 = 'Residual: bad=1' ;
MPRINT(EM_DIAGRAM):   label R_bad1 = 'Residual: bad=1' ;
135528    +
135529    +      label P_bad0 = 'Predicted: bad=0' ;
MPRINT(EM_DIAGRAM):   label P_bad0 = 'Predicted: bad=0' ;
135530    +
135531    +      label R_bad0 = 'Residual: bad=0' ;
MPRINT(EM_DIAGRAM):   label R_bad0 = 'Residual: bad=0' ;
135532    +
135533    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
135534    +
135535    +*** Generate dummy variables for GRP_LOG_REP_clage ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_clage ;
135536    +drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3
135537    +        GRP_LOG_REP_clage4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3 
GRP_LOG_REP_clage4 ;
135538    +if missing( GRP_LOG_REP_clage ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_clage ) then do;
135539    +   GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
135540    +   GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
135541    +   GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
135542    +   GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
135543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135545    +end;
MPRINT(EM_DIAGRAM):   end;
135546    +else do;
MPRINT(EM_DIAGRAM):   else do;
135547    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135548    +   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
135549    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135550    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
135551    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
135552    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
135553    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
135554    +            GRP_LOG_REP_clage1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = -0.55901699437494;
135555    +            GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
135556    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
135557    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
135558    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135559    +         end;
MPRINT(EM_DIAGRAM):   end;
135560    +         else do;
MPRINT(EM_DIAGRAM):   else do;
135561    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
135562    +               GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
135563    +               GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
135564    +               GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
135565    +               GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
135566    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135567    +            end;
MPRINT(EM_DIAGRAM):   end;
135568    +         end;
MPRINT(EM_DIAGRAM):   end;
135569    +      end;
MPRINT(EM_DIAGRAM):   end;
135570    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135571    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
135572    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
135573    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
135574    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
135575    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
135576    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135577    +         end;
MPRINT(EM_DIAGRAM):   end;
135578    +      end;
MPRINT(EM_DIAGRAM):   end;
135579    +   end;
MPRINT(EM_DIAGRAM):   end;
135580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135581    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
135582    +         GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
135583    +         GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
135584    +         GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
135585    +         GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
135586    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135587    +      end;
MPRINT(EM_DIAGRAM):   end;
135588    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135589    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
135590    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
135591    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
135592    +            GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
135593    +            GRP_LOG_REP_clage4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = 0.55901699437494;
135594    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135595    +         end;
MPRINT(EM_DIAGRAM):   end;
135596    +      end;
MPRINT(EM_DIAGRAM):   end;
135597    +   end;
MPRINT(EM_DIAGRAM):   end;
135598    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
135599    +      GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
135600    +      GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
135601    +      GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
135602    +      GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
135603    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135604    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135605    +   end;
MPRINT(EM_DIAGRAM):   end;
135606    +end;
MPRINT(EM_DIAGRAM):   end;
135607    +
135608    +*** Generate dummy variables for GRP_LOG_REP_debtinc ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_debtinc ;
135609    +drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3
135610    +        GRP_LOG_REP_debtinc4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3 
GRP_LOG_REP_debtinc4 ;
135611    +if missing( GRP_LOG_REP_debtinc ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_debtinc ) then do;
135612    +   GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
135613    +   GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
135614    +   GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
135615    +   GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
135616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135618    +end;
MPRINT(EM_DIAGRAM):   end;
135619    +else do;
MPRINT(EM_DIAGRAM):   else do;
135620    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135621    +   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
135622    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135623    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
135624    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
135625    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
135626    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
135627    +            GRP_LOG_REP_debtinc1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = -0.55901699437494;
135628    +            GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
135629    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
135630    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
135631    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135632    +         end;
MPRINT(EM_DIAGRAM):   end;
135633    +         else do;
MPRINT(EM_DIAGRAM):   else do;
135634    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
135635    +               GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
135636    +               GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
135637    +               GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
135638    +               GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
135639    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135640    +            end;
MPRINT(EM_DIAGRAM):   end;
135641    +         end;
MPRINT(EM_DIAGRAM):   end;
135642    +      end;
MPRINT(EM_DIAGRAM):   end;
135643    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135644    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
135645    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
135646    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
135647    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
135648    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
135649    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135650    +         end;
MPRINT(EM_DIAGRAM):   end;
135651    +      end;
MPRINT(EM_DIAGRAM):   end;
135652    +   end;
MPRINT(EM_DIAGRAM):   end;
135653    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135654    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
135655    +         GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
135656    +         GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
135657    +         GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
135658    +         GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
135659    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135660    +      end;
MPRINT(EM_DIAGRAM):   end;
135661    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135662    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
135663    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
135664    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
135665    +            GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
135666    +            GRP_LOG_REP_debtinc4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = 0.55901699437494;
135667    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135668    +         end;
MPRINT(EM_DIAGRAM):   end;
135669    +      end;
MPRINT(EM_DIAGRAM):   end;
135670    +   end;
MPRINT(EM_DIAGRAM):   end;
135671    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
135672    +      GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
135673    +      GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
135674    +      GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
135675    +      GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
135676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135678    +   end;
MPRINT(EM_DIAGRAM):   end;
135679    +end;
MPRINT(EM_DIAGRAM):   end;
135680    +
135681    +*** Generate dummy variables for GRP_LOG_REP_ninq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_ninq ;
135682    +drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
135683    +if missing( GRP_LOG_REP_ninq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_ninq ) then do;
135684    +   GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
135685    +   GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
135686    +   GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
135687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135689    +end;
MPRINT(EM_DIAGRAM):   end;
135690    +else do;
MPRINT(EM_DIAGRAM):   else do;
135691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135692    +   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
135693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135694    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
135695    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
135696    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
135697    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
135698    +   end;
MPRINT(EM_DIAGRAM):   end;
135699    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
135700    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
135701    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
135702    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
135703    +   end;
MPRINT(EM_DIAGRAM):   end;
135704    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
135705    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
135706    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
135707    +      GRP_LOG_REP_ninq4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = 0.63245553203367;
135708    +   end;
MPRINT(EM_DIAGRAM):   end;
135709    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
135710    +      GRP_LOG_REP_ninq1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = -0.63245553203367;
135711    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
135712    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
135713    +   end;
MPRINT(EM_DIAGRAM):   end;
135714    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135715    +      GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
135716    +      GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
135717    +      GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
135718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135720    +   end;
MPRINT(EM_DIAGRAM):   end;
135721    +end;
MPRINT(EM_DIAGRAM):   end;
135722    +
135723    +*** Generate dummy variables for GRP_LOG_REP_value ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_value ;
135724    +drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3
135725    +        GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3 
GRP_LOG_REP_value4 ;
135726    +if missing( GRP_LOG_REP_value ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_value ) then do;
135727    +   GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
135728    +   GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
135729    +   GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
135730    +   GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
135731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
135732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135733    +end;
MPRINT(EM_DIAGRAM):   end;
135734    +else do;
MPRINT(EM_DIAGRAM):   else do;
135735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
135736    +   _dm12 = put( GRP_LOG_REP_value , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_value , BEST12. );
135737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135738    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
135739    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
135740    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
135741    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
135742    +            GRP_LOG_REP_value1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = -0.55901699437494;
135743    +            GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
135744    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
135745    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
135746    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135747    +         end;
MPRINT(EM_DIAGRAM):   end;
135748    +         else do;
MPRINT(EM_DIAGRAM):   else do;
135749    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
135750    +               GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
135751    +               GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
135752    +               GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
135753    +               GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
135754    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135755    +            end;
MPRINT(EM_DIAGRAM):   end;
135756    +         end;
MPRINT(EM_DIAGRAM):   end;
135757    +      end;
MPRINT(EM_DIAGRAM):   end;
135758    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135759    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
135760    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
135761    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
135762    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
135763    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
135764    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135765    +         end;
MPRINT(EM_DIAGRAM):   end;
135766    +      end;
MPRINT(EM_DIAGRAM):   end;
135767    +   end;
MPRINT(EM_DIAGRAM):   end;
135768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135769    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
135770    +         GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
135771    +         GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
135772    +         GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
135773    +         GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
135774    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135775    +      end;
MPRINT(EM_DIAGRAM):   end;
135776    +      else do;
MPRINT(EM_DIAGRAM):   else do;
135777    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
135778    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
135779    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
135780    +            GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
135781    +            GRP_LOG_REP_value4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = 0.55901699437494;
135782    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
135783    +         end;
MPRINT(EM_DIAGRAM):   end;
135784    +      end;
MPRINT(EM_DIAGRAM):   end;
135785    +   end;
MPRINT(EM_DIAGRAM):   end;
135786    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
135787    +      GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
135788    +      GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
135789    +      GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
135790    +      GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
135791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
135792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
135793    +   end;
MPRINT(EM_DIAGRAM):   end;
135794    +end;
MPRINT(EM_DIAGRAM):   end;
135795    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135796    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
135797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135799    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
135800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135801    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
135802    +   H11  =       0.866477931952 * GRP_LOG_REP_clage1  +  1.0000000133514E-10 *
135803    +        GRP_LOG_REP_clage2  +     0.14046362534504 * GRP_LOG_REP_clage3
135804    +          +  9.9999999600419E-11 * GRP_LOG_REP_clage4
135805    +          +      1.7337499195291 * GRP_LOG_REP_debtinc1
135806    +          +     0.26531925215262 * GRP_LOG_REP_debtinc2
135807    +          +  9.9999994396249E-11 * GRP_LOG_REP_debtinc3
135808    +          +  1.0000000133514E-10 * GRP_LOG_REP_debtinc4
135809    +          +  1.0000000133514E-10 * GRP_LOG_REP_ninq1
135810    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq3
135811    +          +     0.13347894094792 * GRP_LOG_REP_ninq4
135812    +          +     1.98018447891479 * GRP_LOG_REP_value1
135813    +          +     0.04595922346168 * GRP_LOG_REP_value2
135814    +          +  1.0000000133514E-10 * GRP_LOG_REP_value3
135815    +          +     0.11370295396737 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.866477931952 * GRP_LOG_REP_clage1 + 1.0000000133514E-10 * 
GRP_LOG_REP_clage2 + 0.14046362534504 * GRP_LOG_REP_clage3 + 9.9999999600419E-11 * 
GRP_LOG_REP_clage4 + 1.7337499195291 * GRP_LOG_REP_debtinc1 + 0.26531925215262 * 
GRP_LOG_REP_debtinc2 + 9.9999994396249E-11 * GRP_LOG_REP_debtinc3 + 1.0000000133514E-10 * 
GRP_LOG_REP_debtinc4 + 1.0000000133514E-10 * GRP_LOG_REP_ninq1 + 1.0000000827403E-10 * 
GRP_LOG_REP_ninq3 + 0.13347894094792 * GRP_LOG_REP_ninq4 + 1.98018447891479 * 
GRP_LOG_REP_value1 + 0.04595922346168 * GRP_LOG_REP_value2 + 1.0000000133514E-10 * 
GRP_LOG_REP_value3 + 0.11370295396737 * GRP_LOG_REP_value4 ;
135816    +   H12  =  1.0000000827403E-10 * GRP_LOG_REP_clage1  +     0.18101025966833 *
135817    +        GRP_LOG_REP_clage2  +     0.24078073894958 * GRP_LOG_REP_clage3
135818    +          +      0.1645068171639 * GRP_LOG_REP_clage4
135819    +          +     0.11927383490464 * GRP_LOG_REP_debtinc1
135820    +          +                1E-10 * GRP_LOG_REP_debtinc2
135821    +          +  1.0000000133514E-10 * GRP_LOG_REP_debtinc3
135822    +          +  9.9999994396249E-11 * GRP_LOG_REP_debtinc4
135823    +          +     0.21180181216679 * GRP_LOG_REP_ninq1
135824    +          +  1.0000000133514E-10 * GRP_LOG_REP_ninq3
135825    +          +  9.9999994396249E-11 * GRP_LOG_REP_ninq4
135826    +          +     1.35384615588653 * GRP_LOG_REP_value1
135827    +          +     0.05962484961607 * GRP_LOG_REP_value2
135828    +          +     0.18762868610404 * GRP_LOG_REP_value3
135829    +          +  1.0000000133514E-10 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H12 = 1.0000000827403E-10 * GRP_LOG_REP_clage1 + 0.18101025966833 * 
GRP_LOG_REP_clage2 + 0.24078073894958 * GRP_LOG_REP_clage3 + 0.1645068171639 * 
GRP_LOG_REP_clage4 + 0.11927383490464 * GRP_LOG_REP_debtinc1 + 1E-10 * GRP_LOG_REP_debtinc2 + 
1.0000000133514E-10 * GRP_LOG_REP_debtinc3 + 9.9999994396249E-11 * GRP_LOG_REP_debtinc4 + 
0.21180181216679 * GRP_LOG_REP_ninq1 + 1.0000000133514E-10 * GRP_LOG_REP_ninq3 + 
9.9999994396249E-11 * GRP_LOG_REP_ninq4 + 1.35384615588653 * GRP_LOG_REP_value1 + 
0.05962484961607 * GRP_LOG_REP_value2 + 0.18762868610404 * GRP_LOG_REP_value3 + 
1.0000000133514E-10 * GRP_LOG_REP_value4 ;
135830    +   H13  =      0.3799949786326 * GRP_LOG_REP_clage1  +     0.13132596673913 *
135831    +        GRP_LOG_REP_clage2  +     0.20645952318763 * GRP_LOG_REP_clage3
135832    +          +     0.05693143360039 * GRP_LOG_REP_clage4
135833    +          +                1E-10 * GRP_LOG_REP_debtinc1
135834    +          +     0.09213574078773 * GRP_LOG_REP_debtinc2
135835    +          +     0.41445093931845 * GRP_LOG_REP_debtinc3
135836    +          +     1.31273866224301 * GRP_LOG_REP_debtinc4
135837    +          +     0.44933737423835 * GRP_LOG_REP_ninq1
135838    +          +     0.01295831226469 * GRP_LOG_REP_ninq3
135839    +          +     0.59359457525909 * GRP_LOG_REP_ninq4
135840    +          +  1.0000000133514E-10 * GRP_LOG_REP_value1
135841    +          +  9.9999994396249E-11 * GRP_LOG_REP_value2
135842    +          +     0.09880859873247 * GRP_LOG_REP_value3
135843    +          +     0.47766414985838 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.3799949786326 * GRP_LOG_REP_clage1 + 0.13132596673913 * 
GRP_LOG_REP_clage2 + 0.20645952318763 * GRP_LOG_REP_clage3 + 0.05693143360039 * 
GRP_LOG_REP_clage4 + 1E-10 * GRP_LOG_REP_debtinc1 + 0.09213574078773 * GRP_LOG_REP_debtinc2 + 
0.41445093931845 * GRP_LOG_REP_debtinc3 + 1.31273866224301 * GRP_LOG_REP_debtinc4 + 
0.44933737423835 * GRP_LOG_REP_ninq1 + 0.01295831226469 * GRP_LOG_REP_ninq3 + 0.59359457525909 
* GRP_LOG_REP_ninq4 + 1.0000000133514E-10 * GRP_LOG_REP_value1 + 9.9999994396249E-11 * 
GRP_LOG_REP_value2 + 0.09880859873247 * GRP_LOG_REP_value3 + 0.47766414985838 * 
GRP_LOG_REP_value4 ;
135844    +   H11  =    -0.40462565984781 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.40462565984781 + H11 ;
135845    +   H12  =    -0.98151702218716 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.98151702218716 + H12 ;
135846    +   H13  =     1.63351144747894 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.63351144747894 + H13 ;
135847    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
135848    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
135849    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
135850    +END;
MPRINT(EM_DIAGRAM):   END;
135851    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
135852    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
135853    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
135854    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
135855    +END;
MPRINT(EM_DIAGRAM):   END;
135856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135857    +*** Writing the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bad ;
135858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135859    +
135860    +*** Generate dummy variables for bad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for bad ;
135861    +drop bad1 bad0 ;
MPRINT(EM_DIAGRAM):   drop bad1 bad0 ;
135862    +label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
135863    +length F_bad $ 12;
MPRINT(EM_DIAGRAM):   length F_bad $ 12;
135864    +F_bad = put( bad , BEST12. );
MPRINT(EM_DIAGRAM):   F_bad = put( bad , BEST12. );
135865    +%DMNORMIP( F_bad )
MPRINT(DMNORMIP):   call dmnorm(F_bad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
135866    +if missing( bad ) then do;
MPRINT(EM_DIAGRAM):   if missing( bad ) then do;
135867    +   bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
135868    +   bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
135869    +end;
MPRINT(EM_DIAGRAM):   end;
135870    +else do;
MPRINT(EM_DIAGRAM):   else do;
135871    +   if F_bad = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_bad = '0' then do;
135872    +      bad1 = 0;
MPRINT(EM_DIAGRAM):   bad1 = 0;
135873    +      bad0 = 1;
MPRINT(EM_DIAGRAM):   bad0 = 1;
135874    +   end;
MPRINT(EM_DIAGRAM):   end;
135875    +   else if F_bad = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_bad = '1' then do;
135876    +      bad1 = 1;
MPRINT(EM_DIAGRAM):   bad1 = 1;
135877    +      bad0 = 0;
MPRINT(EM_DIAGRAM):   bad0 = 0;
135878    +   end;
MPRINT(EM_DIAGRAM):   end;
135879    +   else do;
MPRINT(EM_DIAGRAM):   else do;
135880    +      bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
135881    +      bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
135882    +   end;
MPRINT(EM_DIAGRAM):   end;
135883    +end;
MPRINT(EM_DIAGRAM):   end;
135884    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
135885    +   P_bad1  =    -3.17480981152582 * H11  +    -2.71403744126388 * H12
135886    +          +       3.118593331756 * H13 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -3.17480981152582 * H11 + -2.71403744126388 * H12 + 
3.118593331756 * H13 ;
135887    +   P_bad1  =    -1.83871884475911 + P_bad1 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -1.83871884475911 + P_bad1 ;
135888    +   P_bad0  = 0;
MPRINT(EM_DIAGRAM):   P_bad0 = 0;
135889    +   _MAX_ = MAX (P_bad1 , P_bad0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_bad1 , P_bad0 );
135890    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
135891    +   P_bad1  = EXP(P_bad1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad1 = EXP(P_bad1 - _MAX_);
135892    +   _SUM_ = _SUM_ + P_bad1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad1 ;
135893    +   P_bad0  = EXP(P_bad0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad0 = EXP(P_bad0 - _MAX_);
135894    +   _SUM_ = _SUM_ + P_bad0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad0 ;
135895    +   P_bad1  = P_bad1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad1 = P_bad1 / _SUM_;
135896    +   P_bad0  = P_bad0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad0 = P_bad0 / _SUM_;
135897    +END;
MPRINT(EM_DIAGRAM):   END;
135898    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
135899    +   P_bad1  = .;
MPRINT(EM_DIAGRAM):   P_bad1 = .;
135900    +   P_bad0  = .;
MPRINT(EM_DIAGRAM):   P_bad0 = .;
135901    +END;
MPRINT(EM_DIAGRAM):   END;
135902    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
135903    +   P_bad1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   P_bad1 = 0.19939577039274;
135904    +   P_bad0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   P_bad0 = 0.80060422960725;
135905    +END;
MPRINT(EM_DIAGRAM):   END;
135906    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
135907    +*** Writing the Residuals  of the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node bad ;
135908    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
135909    +IF MISSING( bad1 ) THEN R_bad1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad1 ) THEN R_bad1 = . ;
135910    +ELSE R_bad1  = bad1  - P_bad1 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad1 = bad1 - P_bad1 ;
135911    +IF MISSING( bad0 ) THEN R_bad0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad0 ) THEN R_bad0 = . ;
135912    +ELSE R_bad0  = bad0  - P_bad0 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad0 = bad0 - P_bad0 ;
135913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135914    +*** Writing the I_bad  AND U_bad ;
MPRINT(EM_DIAGRAM):   *** Writing the I_bad AND U_bad ;
135915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
135916    +_MAXP_ = P_bad1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad1 ;
135917    +I_bad  = "1           " ;
MPRINT(EM_DIAGRAM):   I_bad = "1           " ;
135918    +U_bad  =                    1;
MPRINT(EM_DIAGRAM):   U_bad = 1;
135919    +IF( _MAXP_ LT P_bad0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_bad0 ) THEN DO;
135920    +   _MAXP_ = P_bad0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad0 ;
135921    +   I_bad  = "0           " ;
MPRINT(EM_DIAGRAM):   I_bad = "0           " ;
135922    +   U_bad  =                    0;
MPRINT(EM_DIAGRAM):   U_bad = 0;
135923    +END;
MPRINT(EM_DIAGRAM):   END;
135924    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
135925    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
135926    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
135927    +drop
135928    +H11
135929    +H12
135930    +H13
135931    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
135932     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      

MPRINT(EM_DIAGRAM):   quit;
135933     quit;
135934     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
135935     filename emflow
135935   ! "C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\E
135935   ! MFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\EMFLOWSCORE.
sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
135936     *------------------------------------------------------------*;
135937     * Neural2: Scoring VALIDATE data;
135938     *------------------------------------------------------------*;
135939     data EMWS1.Neural2_VALIDATE
135940     / view=EMWS1.Neural2_VALIDATE
135941     ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_VALIDATE / view=EMWS1.Neural2_VALIDATE ;
135942     set EMWS1.BINNING_VALIDATE
135943     ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
135944     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\EMFLOWS
      CORE.sas.
135945    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135946    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
135947    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
135948    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
135949    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
135950    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
135951    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
135952    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
135953    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
135954    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
135955    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
135956    +LENGTH _WARN_ $4
135957    +      F_bad  $ 12
135958    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_bad $ 12 ;
135959    +      label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage1 = 'Dummy: GRP_LOG_REP_clage=1' ;
135960    +
135961    +      label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage2 = 'Dummy: GRP_LOG_REP_clage=2' ;
135962    +
135963    +      label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage3 = 'Dummy: GRP_LOG_REP_clage=3' ;
135964    +
135965    +      label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_clage4 = 'Dummy: GRP_LOG_REP_clage=4' ;
135966    +
135967    +      label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc1 = 'Dummy: GRP_LOG_REP_debtinc=1' ;
135968    +
135969    +      label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc2 = 'Dummy: GRP_LOG_REP_debtinc=2' ;
135970    +
135971    +      label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc3 = 'Dummy: GRP_LOG_REP_debtinc=3' ;
135972    +
135973    +      label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_debtinc4 = 'Dummy: GRP_LOG_REP_debtinc=4' ;
135974    +
135975    +      label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq1 = 'Dummy: GRP_LOG_REP_ninq=1' ;
135976    +
135977    +      label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq3 = 'Dummy: GRP_LOG_REP_ninq=3' ;
135978    +
135979    +      label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_ninq4 = 'Dummy: GRP_LOG_REP_ninq=4' ;
135980    +
135981    +      label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value1 = 'Dummy: GRP_LOG_REP_value=1' ;
135982    +
135983    +      label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value2 = 'Dummy: GRP_LOG_REP_value=2' ;
135984    +
135985    +      label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value3 = 'Dummy: GRP_LOG_REP_value=3' ;
135986    +
135987    +      label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
MPRINT(EM_DIAGRAM):   label GRP_LOG_REP_value4 = 'Dummy: GRP_LOG_REP_value=4' ;
135988    +
135989    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
135990    +
135991    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
135992    +
135993    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
135994    +
135995    +      label I_bad = 'Into: bad' ;
MPRINT(EM_DIAGRAM):   label I_bad = 'Into: bad' ;
135996    +
135997    +      label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
135998    +
135999    +      label U_bad = 'Unnormalized Into: bad' ;
MPRINT(EM_DIAGRAM):   label U_bad = 'Unnormalized Into: bad' ;
136000    +
136001    +      label P_bad1 = 'Predicted: bad=1' ;
MPRINT(EM_DIAGRAM):   label P_bad1 = 'Predicted: bad=1' ;
136002    +
136003    +      label R_bad1 = 'Residual: bad=1' ;
MPRINT(EM_DIAGRAM):   label R_bad1 = 'Residual: bad=1' ;
136004    +
136005    +      label P_bad0 = 'Predicted: bad=0' ;
MPRINT(EM_DIAGRAM):   label P_bad0 = 'Predicted: bad=0' ;
136006    +
136007    +      label R_bad0 = 'Residual: bad=0' ;
MPRINT(EM_DIAGRAM):   label R_bad0 = 'Residual: bad=0' ;
136008    +
136009    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
136010    +
136011    +*** Generate dummy variables for GRP_LOG_REP_clage ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_clage ;
136012    +drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3
136013    +        GRP_LOG_REP_clage4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_clage1 GRP_LOG_REP_clage2 GRP_LOG_REP_clage3 
GRP_LOG_REP_clage4 ;
136014    +if missing( GRP_LOG_REP_clage ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_clage ) then do;
136015    +   GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
136016    +   GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
136017    +   GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
136018    +   GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
136019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136021    +end;
MPRINT(EM_DIAGRAM):   end;
136022    +else do;
MPRINT(EM_DIAGRAM):   else do;
136023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136024    +   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_clage , BEST12. );
136025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136026    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
136027    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
136028    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
136029    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
136030    +            GRP_LOG_REP_clage1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = -0.55901699437494;
136031    +            GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
136032    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
136033    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
136034    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136035    +         end;
MPRINT(EM_DIAGRAM):   end;
136036    +         else do;
MPRINT(EM_DIAGRAM):   else do;
136037    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
136038    +               GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
136039    +               GRP_LOG_REP_clage2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = -0.55901699437494;
136040    +               GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
136041    +               GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
136042    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136043    +            end;
MPRINT(EM_DIAGRAM):   end;
136044    +         end;
MPRINT(EM_DIAGRAM):   end;
136045    +      end;
MPRINT(EM_DIAGRAM):   end;
136046    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136047    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
136048    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
136049    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
136050    +            GRP_LOG_REP_clage3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = -0.55901699437494;
136051    +            GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
136052    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136053    +         end;
MPRINT(EM_DIAGRAM):   end;
136054    +      end;
MPRINT(EM_DIAGRAM):   end;
136055    +   end;
MPRINT(EM_DIAGRAM):   end;
136056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136057    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
136058    +         GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
136059    +         GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
136060    +         GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
136061    +         GRP_LOG_REP_clage4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = -0.55901699437494;
136062    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136063    +      end;
MPRINT(EM_DIAGRAM):   end;
136064    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136065    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
136066    +            GRP_LOG_REP_clage1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = 0.55901699437494;
136067    +            GRP_LOG_REP_clage2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = 0.55901699437494;
136068    +            GRP_LOG_REP_clage3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = 0.55901699437494;
136069    +            GRP_LOG_REP_clage4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = 0.55901699437494;
136070    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136071    +         end;
MPRINT(EM_DIAGRAM):   end;
136072    +      end;
MPRINT(EM_DIAGRAM):   end;
136073    +   end;
MPRINT(EM_DIAGRAM):   end;
136074    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
136075    +      GRP_LOG_REP_clage1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage1 = .;
136076    +      GRP_LOG_REP_clage2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage2 = .;
136077    +      GRP_LOG_REP_clage3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage3 = .;
136078    +      GRP_LOG_REP_clage4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_clage4 = .;
136079    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136080    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136081    +   end;
MPRINT(EM_DIAGRAM):   end;
136082    +end;
MPRINT(EM_DIAGRAM):   end;
136083    +
136084    +*** Generate dummy variables for GRP_LOG_REP_debtinc ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_debtinc ;
136085    +drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3
136086    +        GRP_LOG_REP_debtinc4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_debtinc1 GRP_LOG_REP_debtinc2 GRP_LOG_REP_debtinc3 
GRP_LOG_REP_debtinc4 ;
136087    +if missing( GRP_LOG_REP_debtinc ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_debtinc ) then do;
136088    +   GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
136089    +   GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
136090    +   GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
136091    +   GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
136092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136094    +end;
MPRINT(EM_DIAGRAM):   end;
136095    +else do;
MPRINT(EM_DIAGRAM):   else do;
136096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136097    +   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_debtinc , BEST12. );
136098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136099    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
136100    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
136101    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
136102    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
136103    +            GRP_LOG_REP_debtinc1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = -0.55901699437494;
136104    +            GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
136105    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
136106    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
136107    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136108    +         end;
MPRINT(EM_DIAGRAM):   end;
136109    +         else do;
MPRINT(EM_DIAGRAM):   else do;
136110    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
136111    +               GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
136112    +               GRP_LOG_REP_debtinc2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = -0.55901699437494;
136113    +               GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
136114    +               GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
136115    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136116    +            end;
MPRINT(EM_DIAGRAM):   end;
136117    +         end;
MPRINT(EM_DIAGRAM):   end;
136118    +      end;
MPRINT(EM_DIAGRAM):   end;
136119    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136120    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
136121    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
136122    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
136123    +            GRP_LOG_REP_debtinc3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = -0.55901699437494;
136124    +            GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
136125    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136126    +         end;
MPRINT(EM_DIAGRAM):   end;
136127    +      end;
MPRINT(EM_DIAGRAM):   end;
136128    +   end;
MPRINT(EM_DIAGRAM):   end;
136129    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136130    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
136131    +         GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
136132    +         GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
136133    +         GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
136134    +         GRP_LOG_REP_debtinc4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = -0.55901699437494;
136135    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136136    +      end;
MPRINT(EM_DIAGRAM):   end;
136137    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136138    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
136139    +            GRP_LOG_REP_debtinc1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = 0.55901699437494;
136140    +            GRP_LOG_REP_debtinc2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = 0.55901699437494;
136141    +            GRP_LOG_REP_debtinc3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = 0.55901699437494;
136142    +            GRP_LOG_REP_debtinc4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = 0.55901699437494;
136143    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136144    +         end;
MPRINT(EM_DIAGRAM):   end;
136145    +      end;
MPRINT(EM_DIAGRAM):   end;
136146    +   end;
MPRINT(EM_DIAGRAM):   end;
136147    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
136148    +      GRP_LOG_REP_debtinc1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc1 = .;
136149    +      GRP_LOG_REP_debtinc2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc2 = .;
136150    +      GRP_LOG_REP_debtinc3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc3 = .;
136151    +      GRP_LOG_REP_debtinc4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_debtinc4 = .;
136152    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136153    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136154    +   end;
MPRINT(EM_DIAGRAM):   end;
136155    +end;
MPRINT(EM_DIAGRAM):   end;
136156    +
136157    +*** Generate dummy variables for GRP_LOG_REP_ninq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_ninq ;
136158    +drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_ninq1 GRP_LOG_REP_ninq3 GRP_LOG_REP_ninq4 ;
136159    +if missing( GRP_LOG_REP_ninq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_ninq ) then do;
136160    +   GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
136161    +   GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
136162    +   GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
136163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136165    +end;
MPRINT(EM_DIAGRAM):   end;
136166    +else do;
MPRINT(EM_DIAGRAM):   else do;
136167    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136168    +   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_ninq , BEST12. );
136169    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136170    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
136171    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
136172    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
136173    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
136174    +   end;
MPRINT(EM_DIAGRAM):   end;
136175    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
136176    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
136177    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
136178    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
136179    +   end;
MPRINT(EM_DIAGRAM):   end;
136180    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
136181    +      GRP_LOG_REP_ninq1 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = 0.63245553203367;
136182    +      GRP_LOG_REP_ninq3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = 0.63245553203367;
136183    +      GRP_LOG_REP_ninq4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = 0.63245553203367;
136184    +   end;
MPRINT(EM_DIAGRAM):   end;
136185    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
136186    +      GRP_LOG_REP_ninq1 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = -0.63245553203367;
136187    +      GRP_LOG_REP_ninq3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = -0.63245553203367;
136188    +      GRP_LOG_REP_ninq4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = -0.63245553203367;
136189    +   end;
MPRINT(EM_DIAGRAM):   end;
136190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136191    +      GRP_LOG_REP_ninq1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq1 = .;
136192    +      GRP_LOG_REP_ninq3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq3 = .;
136193    +      GRP_LOG_REP_ninq4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_ninq4 = .;
136194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136196    +   end;
MPRINT(EM_DIAGRAM):   end;
136197    +end;
MPRINT(EM_DIAGRAM):   end;
136198    +
136199    +*** Generate dummy variables for GRP_LOG_REP_value ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_LOG_REP_value ;
136200    +drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3
136201    +        GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   drop GRP_LOG_REP_value1 GRP_LOG_REP_value2 GRP_LOG_REP_value3 
GRP_LOG_REP_value4 ;
136202    +if missing( GRP_LOG_REP_value ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_LOG_REP_value ) then do;
136203    +   GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
136204    +   GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
136205    +   GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
136206    +   GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
136207    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
136208    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136209    +end;
MPRINT(EM_DIAGRAM):   end;
136210    +else do;
MPRINT(EM_DIAGRAM):   else do;
136211    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
136212    +   _dm12 = put( GRP_LOG_REP_value , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_LOG_REP_value , BEST12. );
136213    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136214    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
136215    +   if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
136216    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
136217    +         if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
136218    +            GRP_LOG_REP_value1 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = -0.55901699437494;
136219    +            GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
136220    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
136221    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
136222    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136223    +         end;
MPRINT(EM_DIAGRAM):   end;
136224    +         else do;
MPRINT(EM_DIAGRAM):   else do;
136225    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
136226    +               GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
136227    +               GRP_LOG_REP_value2 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = -0.55901699437494;
136228    +               GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
136229    +               GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
136230    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136231    +            end;
MPRINT(EM_DIAGRAM):   end;
136232    +         end;
MPRINT(EM_DIAGRAM):   end;
136233    +      end;
MPRINT(EM_DIAGRAM):   end;
136234    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136235    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
136236    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
136237    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
136238    +            GRP_LOG_REP_value3 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = -0.55901699437494;
136239    +            GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
136240    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136241    +         end;
MPRINT(EM_DIAGRAM):   end;
136242    +      end;
MPRINT(EM_DIAGRAM):   end;
136243    +   end;
MPRINT(EM_DIAGRAM):   end;
136244    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136245    +      if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
136246    +         GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
136247    +         GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
136248    +         GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
136249    +         GRP_LOG_REP_value4 = -0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = -0.55901699437494;
136250    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136251    +      end;
MPRINT(EM_DIAGRAM):   end;
136252    +      else do;
MPRINT(EM_DIAGRAM):   else do;
136253    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
136254    +            GRP_LOG_REP_value1 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = 0.55901699437494;
136255    +            GRP_LOG_REP_value2 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = 0.55901699437494;
136256    +            GRP_LOG_REP_value3 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = 0.55901699437494;
136257    +            GRP_LOG_REP_value4 = 0.55901699437494;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = 0.55901699437494;
136258    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
136259    +         end;
MPRINT(EM_DIAGRAM):   end;
136260    +      end;
MPRINT(EM_DIAGRAM):   end;
136261    +   end;
MPRINT(EM_DIAGRAM):   end;
136262    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
136263    +      GRP_LOG_REP_value1 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value1 = .;
136264    +      GRP_LOG_REP_value2 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value2 = .;
136265    +      GRP_LOG_REP_value3 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value3 = .;
136266    +      GRP_LOG_REP_value4 = .;
MPRINT(EM_DIAGRAM):   GRP_LOG_REP_value4 = .;
136267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
136268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
136269    +   end;
MPRINT(EM_DIAGRAM):   end;
136270    +end;
MPRINT(EM_DIAGRAM):   end;
136271    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136272    +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
136273    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136274    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136275    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
136276    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136277    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136278    +   H11  =       0.866477931952 * GRP_LOG_REP_clage1  +  1.0000000133514E-10 *
136279    +        GRP_LOG_REP_clage2  +     0.14046362534504 * GRP_LOG_REP_clage3
136280    +          +  9.9999999600419E-11 * GRP_LOG_REP_clage4
136281    +          +      1.7337499195291 * GRP_LOG_REP_debtinc1
136282    +          +     0.26531925215262 * GRP_LOG_REP_debtinc2
136283    +          +  9.9999994396249E-11 * GRP_LOG_REP_debtinc3
136284    +          +  1.0000000133514E-10 * GRP_LOG_REP_debtinc4
136285    +          +  1.0000000133514E-10 * GRP_LOG_REP_ninq1
136286    +          +  1.0000000827403E-10 * GRP_LOG_REP_ninq3
136287    +          +     0.13347894094792 * GRP_LOG_REP_ninq4
136288    +          +     1.98018447891479 * GRP_LOG_REP_value1
136289    +          +     0.04595922346168 * GRP_LOG_REP_value2
136290    +          +  1.0000000133514E-10 * GRP_LOG_REP_value3
136291    +          +     0.11370295396737 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.866477931952 * GRP_LOG_REP_clage1 + 1.0000000133514E-10 * 
GRP_LOG_REP_clage2 + 0.14046362534504 * GRP_LOG_REP_clage3 + 9.9999999600419E-11 * 
GRP_LOG_REP_clage4 + 1.7337499195291 * GRP_LOG_REP_debtinc1 + 0.26531925215262 * 
GRP_LOG_REP_debtinc2 + 9.9999994396249E-11 * GRP_LOG_REP_debtinc3 + 1.0000000133514E-10 * 
GRP_LOG_REP_debtinc4 + 1.0000000133514E-10 * GRP_LOG_REP_ninq1 + 1.0000000827403E-10 * 
GRP_LOG_REP_ninq3 + 0.13347894094792 * GRP_LOG_REP_ninq4 + 1.98018447891479 * 
GRP_LOG_REP_value1 + 0.04595922346168 * GRP_LOG_REP_value2 + 1.0000000133514E-10 * 
GRP_LOG_REP_value3 + 0.11370295396737 * GRP_LOG_REP_value4 ;
136292    +   H12  =  1.0000000827403E-10 * GRP_LOG_REP_clage1  +     0.18101025966833 *
136293    +        GRP_LOG_REP_clage2  +     0.24078073894958 * GRP_LOG_REP_clage3
136294    +          +      0.1645068171639 * GRP_LOG_REP_clage4
136295    +          +     0.11927383490464 * GRP_LOG_REP_debtinc1
136296    +          +                1E-10 * GRP_LOG_REP_debtinc2
136297    +          +  1.0000000133514E-10 * GRP_LOG_REP_debtinc3
136298    +          +  9.9999994396249E-11 * GRP_LOG_REP_debtinc4
136299    +          +     0.21180181216679 * GRP_LOG_REP_ninq1
136300    +          +  1.0000000133514E-10 * GRP_LOG_REP_ninq3
136301    +          +  9.9999994396249E-11 * GRP_LOG_REP_ninq4
136302    +          +     1.35384615588653 * GRP_LOG_REP_value1
136303    +          +     0.05962484961607 * GRP_LOG_REP_value2
136304    +          +     0.18762868610404 * GRP_LOG_REP_value3
136305    +          +  1.0000000133514E-10 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H12 = 1.0000000827403E-10 * GRP_LOG_REP_clage1 + 0.18101025966833 * 
GRP_LOG_REP_clage2 + 0.24078073894958 * GRP_LOG_REP_clage3 + 0.1645068171639 * 
GRP_LOG_REP_clage4 + 0.11927383490464 * GRP_LOG_REP_debtinc1 + 1E-10 * GRP_LOG_REP_debtinc2 + 
1.0000000133514E-10 * GRP_LOG_REP_debtinc3 + 9.9999994396249E-11 * GRP_LOG_REP_debtinc4 + 
0.21180181216679 * GRP_LOG_REP_ninq1 + 1.0000000133514E-10 * GRP_LOG_REP_ninq3 + 
9.9999994396249E-11 * GRP_LOG_REP_ninq4 + 1.35384615588653 * GRP_LOG_REP_value1 + 
0.05962484961607 * GRP_LOG_REP_value2 + 0.18762868610404 * GRP_LOG_REP_value3 + 
1.0000000133514E-10 * GRP_LOG_REP_value4 ;
136306    +   H13  =      0.3799949786326 * GRP_LOG_REP_clage1  +     0.13132596673913 *
136307    +        GRP_LOG_REP_clage2  +     0.20645952318763 * GRP_LOG_REP_clage3
136308    +          +     0.05693143360039 * GRP_LOG_REP_clage4
136309    +          +                1E-10 * GRP_LOG_REP_debtinc1
136310    +          +     0.09213574078773 * GRP_LOG_REP_debtinc2
136311    +          +     0.41445093931845 * GRP_LOG_REP_debtinc3
136312    +          +     1.31273866224301 * GRP_LOG_REP_debtinc4
136313    +          +     0.44933737423835 * GRP_LOG_REP_ninq1
136314    +          +     0.01295831226469 * GRP_LOG_REP_ninq3
136315    +          +     0.59359457525909 * GRP_LOG_REP_ninq4
136316    +          +  1.0000000133514E-10 * GRP_LOG_REP_value1
136317    +          +  9.9999994396249E-11 * GRP_LOG_REP_value2
136318    +          +     0.09880859873247 * GRP_LOG_REP_value3
136319    +          +     0.47766414985838 * GRP_LOG_REP_value4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.3799949786326 * GRP_LOG_REP_clage1 + 0.13132596673913 * 
GRP_LOG_REP_clage2 + 0.20645952318763 * GRP_LOG_REP_clage3 + 0.05693143360039 * 
GRP_LOG_REP_clage4 + 1E-10 * GRP_LOG_REP_debtinc1 + 0.09213574078773 * GRP_LOG_REP_debtinc2 + 
0.41445093931845 * GRP_LOG_REP_debtinc3 + 1.31273866224301 * GRP_LOG_REP_debtinc4 + 
0.44933737423835 * GRP_LOG_REP_ninq1 + 0.01295831226469 * GRP_LOG_REP_ninq3 + 0.59359457525909 
* GRP_LOG_REP_ninq4 + 1.0000000133514E-10 * GRP_LOG_REP_value1 + 9.9999994396249E-11 * 
GRP_LOG_REP_value2 + 0.09880859873247 * GRP_LOG_REP_value3 + 0.47766414985838 * 
GRP_LOG_REP_value4 ;
136320    +   H11  =    -0.40462565984781 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.40462565984781 + H11 ;
136321    +   H12  =    -0.98151702218716 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.98151702218716 + H12 ;
136322    +   H13  =     1.63351144747894 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.63351144747894 + H13 ;
136323    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
136324    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
136325    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
136326    +END;
MPRINT(EM_DIAGRAM):   END;
136327    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136328    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
136329    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
136330    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
136331    +END;
MPRINT(EM_DIAGRAM):   END;
136332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136333    +*** Writing the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bad ;
136334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136335    +
136336    +*** Generate dummy variables for bad ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for bad ;
136337    +drop bad1 bad0 ;
MPRINT(EM_DIAGRAM):   drop bad1 bad0 ;
136338    +label F_bad = 'From: bad' ;
MPRINT(EM_DIAGRAM):   label F_bad = 'From: bad' ;
136339    +length F_bad $ 12;
MPRINT(EM_DIAGRAM):   length F_bad $ 12;
136340    +F_bad = put( bad , BEST12. );
MPRINT(EM_DIAGRAM):   F_bad = put( bad , BEST12. );
136341    +%DMNORMIP( F_bad )
MPRINT(DMNORMIP):   call dmnorm(F_bad,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
136342    +if missing( bad ) then do;
MPRINT(EM_DIAGRAM):   if missing( bad ) then do;
136343    +   bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
136344    +   bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
136345    +end;
MPRINT(EM_DIAGRAM):   end;
136346    +else do;
MPRINT(EM_DIAGRAM):   else do;
136347    +   if F_bad = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_bad = '0' then do;
136348    +      bad1 = 0;
MPRINT(EM_DIAGRAM):   bad1 = 0;
136349    +      bad0 = 1;
MPRINT(EM_DIAGRAM):   bad0 = 1;
136350    +   end;
MPRINT(EM_DIAGRAM):   end;
136351    +   else if F_bad = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_bad = '1' then do;
136352    +      bad1 = 1;
MPRINT(EM_DIAGRAM):   bad1 = 1;
136353    +      bad0 = 0;
MPRINT(EM_DIAGRAM):   bad0 = 0;
136354    +   end;
MPRINT(EM_DIAGRAM):   end;
136355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
136356    +      bad1 = .;
MPRINT(EM_DIAGRAM):   bad1 = .;
136357    +      bad0 = .;
MPRINT(EM_DIAGRAM):   bad0 = .;
136358    +   end;
MPRINT(EM_DIAGRAM):   end;
136359    +end;
MPRINT(EM_DIAGRAM):   end;
136360    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
136361    +   P_bad1  =    -3.17480981152582 * H11  +    -2.71403744126388 * H12
136362    +          +       3.118593331756 * H13 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -3.17480981152582 * H11 + -2.71403744126388 * H12 + 
3.118593331756 * H13 ;
136363    +   P_bad1  =    -1.83871884475911 + P_bad1 ;
MPRINT(EM_DIAGRAM):   P_bad1 = -1.83871884475911 + P_bad1 ;
136364    +   P_bad0  = 0;
MPRINT(EM_DIAGRAM):   P_bad0 = 0;
136365    +   _MAX_ = MAX (P_bad1 , P_bad0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_bad1 , P_bad0 );
136366    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
136367    +   P_bad1  = EXP(P_bad1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad1 = EXP(P_bad1 - _MAX_);
136368    +   _SUM_ = _SUM_ + P_bad1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad1 ;
136369    +   P_bad0  = EXP(P_bad0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_bad0 = EXP(P_bad0 - _MAX_);
136370    +   _SUM_ = _SUM_ + P_bad0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_bad0 ;
136371    +   P_bad1  = P_bad1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad1 = P_bad1 / _SUM_;
136372    +   P_bad0  = P_bad0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_bad0 = P_bad0 / _SUM_;
136373    +END;
MPRINT(EM_DIAGRAM):   END;
136374    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
136375    +   P_bad1  = .;
MPRINT(EM_DIAGRAM):   P_bad1 = .;
136376    +   P_bad0  = .;
MPRINT(EM_DIAGRAM):   P_bad0 = .;
136377    +END;
MPRINT(EM_DIAGRAM):   END;
136378    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
136379    +   P_bad1  =     0.19939577039274;
MPRINT(EM_DIAGRAM):   P_bad1 = 0.19939577039274;
136380    +   P_bad0  =     0.80060422960725;
MPRINT(EM_DIAGRAM):   P_bad0 = 0.80060422960725;
136381    +END;
MPRINT(EM_DIAGRAM):   END;
136382    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
136383    +*** Writing the Residuals  of the Node bad ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node bad ;
136384    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
136385    +IF MISSING( bad1 ) THEN R_bad1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad1 ) THEN R_bad1 = . ;
136386    +ELSE R_bad1  = bad1  - P_bad1 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad1 = bad1 - P_bad1 ;
136387    +IF MISSING( bad0 ) THEN R_bad0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( bad0 ) THEN R_bad0 = . ;
136388    +ELSE R_bad0  = bad0  - P_bad0 ;
MPRINT(EM_DIAGRAM):   ELSE R_bad0 = bad0 - P_bad0 ;
136389    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136390    +*** Writing the I_bad  AND U_bad ;
MPRINT(EM_DIAGRAM):   *** Writing the I_bad AND U_bad ;
136391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
136392    +_MAXP_ = P_bad1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad1 ;
136393    +I_bad  = "1           " ;
MPRINT(EM_DIAGRAM):   I_bad = "1           " ;
136394    +U_bad  =                    1;
MPRINT(EM_DIAGRAM):   U_bad = 1;
136395    +IF( _MAXP_ LT P_bad0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_bad0 ) THEN DO;
136396    +   _MAXP_ = P_bad0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_bad0 ;
136397    +   I_bad  = "0           " ;
MPRINT(EM_DIAGRAM):   I_bad = "0           " ;
136398    +   U_bad  =                    0;
MPRINT(EM_DIAGRAM):   U_bad = 0;
136399    +END;
MPRINT(EM_DIAGRAM):   END;
136400    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
136401    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
136402    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
136403    +drop
136404    +H11
136405    +H12
136406    +H13
136407    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
136408     run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
      

MPRINT(EM_DIAGRAM):   quit;
136409     quit;
136410     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
136411     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
136412     * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
136413     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.24 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\Users\bteric01\Documents\Tutorials_Projects\Project_3\Workspaces\EMWS1\Neural2\CDELTA_TRAIN
.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural2_TRAIN out=WORK.M1ZFNSXP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZFNSXP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZFNSXP(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZFNSXP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1ZFNSXP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1BPIX_C NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M309MKFV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
The SAS System

MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BPIX_C;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_BAD1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_BAD1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("P_BAD0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_BAD0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("F_BAD") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("I_BAD") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("U_BAD") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("BAD") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
136748     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
136749     set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
136750     where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
136751     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (DATA='Neural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136752     data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMINFO;
136753     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
136754     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
136755     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
136759     run;
136760     data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
136761     set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO WORK.MODELTEMP_INFO;
136762     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136763     proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
136764     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
136765     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136766     proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
136767     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
136768     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136769     proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
136770     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
136771     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

136772     data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_EMINFO;
136773     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
136774     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
136775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

136776     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
136777     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
136778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
136779     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.26 seconds
      cpu time            0.26 seconds
      
NOTE: View EMWS1.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
